{"_id":"sw-precache","_rev":"38-b634ddec8e115f777e36641707d278f0","name":"sw-precache","description":"Generates a service worker to cache your local App Shell resources.","dist-tags":{"latest":"3.2.0"},"versions":{"1.0.0":{"name":"sw-precache","version":"1.0.0","description":"Generate service worker code that will precache specific resources.","author":{"name":"Jeff Posnick","email":"jeffy@google.com","url":"https://jeffy.info"},"homepage":"https://github.com/jeffposnick/sw-precache","main":"sw-precache.js","keywords":["caching","offline","precaching","service-worker","serviceworker"],"engines":{"node":">=0.10.0"},"devDependencies":{"del":"^1.1.1","express":"^4.10.7","gulp":"^3.8.10","gulp-load-plugins":"^0.8.0","gulp-util":"^3.0.1","jade":"^1.8.2","mocha":"^2.1.0","run-sequence":"^1.0.2"},"dependencies":{"glob":"^4.3.2","lodash":"^2.4.1","pretty-bytes":"^1.0.2"},"repository":{"type":"git","url":"https://github.com/jeffposnick/sw-precache"},"bugs":{"url":"https://github.com/jeffposnick/sw-precache/issues"},"license":"Apache-2.0","scripts":{"test":"mocha"},"files":["sw-precache.js","service-worker.tmpl"],"gitHead":"3c7b92fccfedba1febbb63146030defdf5356dcf","_id":"sw-precache@1.0.0","_shasum":"43e5ce024d8c72fa903a6896fbbdb6dca73d054c","_from":".","_npmVersion":"2.1.9","_nodeVersion":"0.10.33","_npmUser":{"name":"jeffposnick","email":"jeffy@google.com"},"maintainers":[{"name":"jeffposnick","email":"jeffy@google.com"}],"dist":{"shasum":"43e5ce024d8c72fa903a6896fbbdb6dca73d054c","tarball":"https://registry.npmjs.org/sw-precache/-/sw-precache-1.0.0.tgz"},"directories":{}},"1.1.0":{"name":"sw-precache","version":"1.1.0","description":"Generate service worker code that will precache specific resources.","author":{"name":"Jeff Posnick","email":"jeffy@google.com","url":"https://jeffy.info"},"homepage":"https://github.com/jeffposnick/sw-precache","main":"sw-precache.js","keywords":["caching","offline","precaching","service-worker","serviceworker"],"engines":{"node":">=0.10.0"},"devDependencies":{"del":"^1.1.1","express":"^4.10.7","gulp":"^3.8.10","gulp-gh-pages":"^0.4.0","gulp-load-plugins":"^0.8.0","gulp-util":"^3.0.1","jade":"^1.8.2","mocha":"^2.1.0","run-sequence":"^1.0.2"},"dependencies":{"glob":"^4.3.2","lodash":"^2.4.1","pretty-bytes":"^1.0.2"},"repository":{"type":"git","url":"https://github.com/jeffposnick/sw-precache"},"bugs":{"url":"https://github.com/jeffposnick/sw-precache/issues"},"license":"Apache-2.0","scripts":{"test":"mocha"},"files":["sw-precache.js","service-worker.tmpl"],"gitHead":"ddfed1a469d4a360545d171ed839efea5f58b366","_id":"sw-precache@1.1.0","_shasum":"6cecfb98661f9ad9d7c63970cefcea67d40c4f44","_from":".","_npmVersion":"2.1.9","_nodeVersion":"0.10.33","_npmUser":{"name":"jeffposnick","email":"jeffy@google.com"},"maintainers":[{"name":"jeffposnick","email":"jeffy@google.com"}],"dist":{"shasum":"6cecfb98661f9ad9d7c63970cefcea67d40c4f44","tarball":"https://registry.npmjs.org/sw-precache/-/sw-precache-1.1.0.tgz"},"directories":{}},"1.1.1":{"name":"sw-precache","version":"1.1.1","description":"Generate service worker code that will precache specific resources.","author":{"name":"Jeff Posnick","email":"jeffy@google.com","url":"https://jeffy.info"},"homepage":"https://github.com/jeffposnick/sw-precache","main":"sw-precache.js","keywords":["caching","offline","precaching","service-worker","serviceworker"],"engines":{"node":">=0.10.0"},"devDependencies":{"del":"^1.1.1","express":"^4.10.7","gulp":"^3.8.10","gulp-gh-pages":"^0.4.0","gulp-load-plugins":"^0.8.0","gulp-util":"^3.0.1","jade":"^1.8.2","mocha":"^2.1.0","run-sequence":"^1.0.2"},"dependencies":{"glob":"^4.3.2","lodash":"^2.4.1","pretty-bytes":"^1.0.2"},"repository":{"type":"git","url":"https://github.com/jeffposnick/sw-precache"},"bugs":{"url":"https://github.com/jeffposnick/sw-precache/issues"},"license":"Apache-2.0","scripts":{"test":"mocha"},"files":["sw-precache.js","service-worker.tmpl"],"gitHead":"89e668cbdf3974daec70d956cd35836ac75eed07","_id":"sw-precache@1.1.1","_shasum":"285cc965353e3d78ff63f6b9b05c9e5c2f04a503","_from":".","_npmVersion":"2.1.9","_nodeVersion":"0.10.33","_npmUser":{"name":"jeffposnick","email":"jeffy@google.com"},"maintainers":[{"name":"jeffposnick","email":"jeffy@google.com"}],"dist":{"shasum":"285cc965353e3d78ff63f6b9b05c9e5c2f04a503","tarball":"https://registry.npmjs.org/sw-precache/-/sw-precache-1.1.1.tgz"},"directories":{}},"1.1.2":{"name":"sw-precache","version":"1.1.2","description":"Generate service worker code that will precache specific resources.","author":{"name":"Jeff Posnick","email":"jeffy@google.com","url":"https://jeffy.info"},"homepage":"https://github.com/jeffposnick/sw-precache","main":"sw-precache.js","keywords":["caching","offline","precaching","service-worker","serviceworker"],"engines":{"node":">=0.10.0"},"devDependencies":{"del":"^1.1.1","express":"^4.10.7","gulp":"^3.8.10","gulp-gh-pages":"^0.4.0","gulp-load-plugins":"^0.8.0","gulp-util":"^3.0.1","jade":"^1.8.2","mocha":"^2.1.0","run-sequence":"^1.0.2"},"dependencies":{"glob":"^4.3.2","lodash":"^2.4.1","pretty-bytes":"^1.0.2"},"repository":{"type":"git","url":"https://github.com/jeffposnick/sw-precache"},"bugs":{"url":"https://github.com/jeffposnick/sw-precache/issues"},"license":"Apache-2.0","scripts":{"test":"mocha"},"files":["sw-precache.js","service-worker.tmpl"],"gitHead":"6c9e2dbcb41872c0424311007d9cc52ed7d73472","_id":"sw-precache@1.1.2","_shasum":"b0e029884d28c6f1d44862e1a08146d2b86633a5","_from":".","_npmVersion":"2.1.9","_nodeVersion":"0.10.33","_npmUser":{"name":"jeffposnick","email":"jeffy@google.com"},"maintainers":[{"name":"jeffposnick","email":"jeffy@google.com"}],"dist":{"shasum":"b0e029884d28c6f1d44862e1a08146d2b86633a5","tarball":"https://registry.npmjs.org/sw-precache/-/sw-precache-1.1.2.tgz"},"directories":{}},"1.2.0":{"name":"sw-precache","version":"1.2.0","description":"Generate service worker code that will precache specific resources.","author":{"name":"Jeff Posnick","email":"jeffy@google.com","url":"https://jeffy.info"},"homepage":"https://github.com/jeffposnick/sw-precache","main":"sw-precache.js","keywords":["caching","offline","precaching","service-worker","serviceworker"],"engines":{"node":">=0.10.0"},"devDependencies":{"del":"^1.1.1","express":"^4.10.7","gulp":"^3.8.10","gulp-gh-pages":"^0.4.0","gulp-load-plugins":"^0.8.0","gulp-util":"^3.0.1","jade":"^1.8.2","mocha":"^2.1.0","run-sequence":"^1.0.2"},"dependencies":{"glob":"^4.3.2","lodash":"^2.4.1","pretty-bytes":"^1.0.2"},"repository":{"type":"git","url":"https://github.com/jeffposnick/sw-precache"},"bugs":{"url":"https://github.com/jeffposnick/sw-precache/issues"},"license":"Apache-2.0","scripts":{"test":"mocha","prepublish":"mocha"},"files":["sw-precache.js","service-worker.tmpl"],"gitHead":"41f54cd8771670bd39fe6b9d784f81c0a90f459f","_id":"sw-precache@1.2.0","_shasum":"23449a06d5144337ab4f9d54231826202f861e2c","_from":".","_npmVersion":"2.1.7","_nodeVersion":"0.10.33","_npmUser":{"name":"jeffposnick","email":"jeffy@google.com"},"maintainers":[{"name":"jeffposnick","email":"jeffy@google.com"}],"dist":{"shasum":"23449a06d5144337ab4f9d54231826202f861e2c","tarball":"https://registry.npmjs.org/sw-precache/-/sw-precache-1.2.0.tgz"},"directories":{}},"1.2.1":{"name":"sw-precache","version":"1.2.1","description":"Generate service worker code that will precache specific resources.","author":{"name":"Jeff Posnick","email":"jeffy@google.com","url":"https://jeffy.info"},"homepage":"https://github.com/jeffposnick/sw-precache","main":"sw-precache.js","keywords":["caching","offline","precaching","service-worker","serviceworker"],"engines":{"node":">=0.10.0"},"devDependencies":{"del":"^1.1.1","dom-urls":"^0.1.1","express":"^4.10.7","gulp":"^3.8.10","gulp-gh-pages":"^0.4.0","gulp-load-plugins":"^0.8.0","gulp-mocha":"^2.0.0","gulp-util":"^3.0.1","jade":"^1.8.2","mocha":"^2.1.0","run-sequence":"^1.0.2"},"dependencies":{"glob":"^4.3.2","lodash":"^2.4.1","pretty-bytes":"^1.0.2"},"repository":{"type":"git","url":"https://github.com/jeffposnick/sw-precache"},"bugs":{"url":"https://github.com/jeffposnick/sw-precache/issues"},"license":"Apache-2.0","scripts":{"test":"mocha"},"files":["sw-precache.js","service-worker.tmpl"],"gitHead":"c0f76580e04d1566e63b37217d3d6fe75b03f5a0","_id":"sw-precache@1.2.1","_shasum":"26d381700cdc767f2b48a54707e623fffc106190","_from":".","_npmVersion":"2.3.0","_nodeVersion":"0.10.35","_npmUser":{"name":"jeffposnick","email":"jeffy@google.com"},"maintainers":[{"name":"jeffposnick","email":"jeffy@google.com"}],"dist":{"shasum":"26d381700cdc767f2b48a54707e623fffc106190","tarball":"https://registry.npmjs.org/sw-precache/-/sw-precache-1.2.1.tgz"},"directories":{}},"1.2.2":{"name":"sw-precache","version":"1.2.2","description":"Generate service worker code that will precache specific resources.","author":{"name":"Jeff Posnick","email":"jeffy@google.com","url":"https://jeffy.info"},"homepage":"https://github.com/jeffposnick/sw-precache","main":"sw-precache.js","keywords":["caching","offline","precaching","service-worker","serviceworker"],"engines":{"node":">=0.10.0"},"devDependencies":{"del":"^1.1.1","dom-urls":"^0.1.1","express":"^4.10.7","gulp":"^3.8.10","gulp-gh-pages":"^0.4.0","gulp-load-plugins":"^0.8.0","gulp-mocha":"^2.0.0","gulp-util":"^3.0.1","jade":"^1.8.2","mocha":"^2.1.0","run-sequence":"^1.0.2"},"dependencies":{"glob":"^4.3.2","lodash.defaults":"^3.0.0","lodash.template":"^3.0.0","pretty-bytes":"^1.0.2"},"repository":{"type":"git","url":"https://github.com/jeffposnick/sw-precache"},"bugs":{"url":"https://github.com/jeffposnick/sw-precache/issues"},"license":"Apache-2.0","scripts":{"test":"mocha"},"files":["sw-precache.js","service-worker.tmpl"],"gitHead":"af1e40934d2ffe3c9525d4d3c6ab36891d14433a","_id":"sw-precache@1.2.2","_shasum":"70edb0c096f47ab2f2dd2ac2bddcd77b3cea8a5d","_from":".","_npmVersion":"2.3.0","_nodeVersion":"0.10.35","_npmUser":{"name":"jeffposnick","email":"jeffy@google.com"},"maintainers":[{"name":"jeffposnick","email":"jeffy@google.com"}],"dist":{"shasum":"70edb0c096f47ab2f2dd2ac2bddcd77b3cea8a5d","tarball":"https://registry.npmjs.org/sw-precache/-/sw-precache-1.2.2.tgz"},"directories":{}},"1.2.3":{"name":"sw-precache","version":"1.2.3","description":"Generate service worker code that will precache specific resources.","author":{"name":"Jeff Posnick","email":"jeffy@google.com","url":"https://jeffy.info"},"homepage":"https://github.com/jeffposnick/sw-precache","main":"lib/sw-precache.js","keywords":["caching","offline","precaching","service-worker","serviceworker"],"engines":{"node":">=0.10.0"},"devDependencies":{"del":"^1.1.1","express":"^4.10.7","gulp":"^3.8.10","gulp-gh-pages":"^0.4.0","gulp-load-plugins":"^0.8.0","gulp-mocha":"^2.0.0","gulp-util":"^3.0.1","jade":"^1.8.2","mocha":"^2.1.0","run-sequence":"^1.0.2"},"dependencies":{"dom-urls":"^0.1.1","glob":"^4.3.2","lodash.defaults":"^3.0.0","lodash.template":"^3.0.0","pretty-bytes":"^1.0.2"},"repository":{"type":"git","url":"https://github.com/jeffposnick/sw-precache"},"bugs":{"url":"https://github.com/jeffposnick/sw-precache/issues"},"license":"Apache-2.0","scripts":{"test":"mocha"},"files":["lib","service-worker.tmpl"],"gitHead":"2484f8253f89c5cf8c77fe3b0b86baea545646e9","_id":"sw-precache@1.2.3","_shasum":"7760ece846bfb58e3e3b416f2d12e7144c6957ce","_from":".","_npmVersion":"2.1.7","_nodeVersion":"0.10.33","_npmUser":{"name":"jeffposnick","email":"jeffy@google.com"},"maintainers":[{"name":"jeffposnick","email":"jeffy@google.com"}],"dist":{"shasum":"7760ece846bfb58e3e3b416f2d12e7144c6957ce","tarball":"https://registry.npmjs.org/sw-precache/-/sw-precache-1.2.3.tgz"},"directories":{}},"1.2.4":{"name":"sw-precache","version":"1.2.4","description":"Generate service worker code that will precache specific resources.","author":{"name":"Jeff Posnick","email":"jeffy@google.com","url":"https://jeffy.info"},"homepage":"https://github.com/jeffposnick/sw-precache","main":"lib/sw-precache.js","keywords":["caching","offline","precaching","service-worker","serviceworker"],"engines":{"node":">=0.10.0"},"devDependencies":{"del":"^1.1.1","express":"^4.10.7","gulp":"^3.8.10","gulp-gh-pages":"^0.4.0","gulp-load-plugins":"^0.8.0","gulp-mocha":"^2.0.0","gulp-util":"^3.0.1","jade":"^1.8.2","mocha":"^2.1.0","run-sequence":"^1.0.2"},"dependencies":{"dom-urls":"^0.1.1","glob":"^4.3.2","lodash.defaults":"^3.0.0","lodash.template":"^3.0.0","pretty-bytes":"^1.0.2"},"repository":{"type":"git","url":"https://github.com/jeffposnick/sw-precache"},"bugs":{"url":"https://github.com/jeffposnick/sw-precache/issues"},"license":"Apache-2.0","scripts":{"test":"mocha"},"files":["lib","service-worker.tmpl"],"gitHead":"f123c975d40730c36c2fadea2cd59d20236aa773","_id":"sw-precache@1.2.4","_shasum":"8ad439f2788ed87012d26bbde85900b8c92840e0","_from":".","_npmVersion":"2.4.1","_nodeVersion":"0.10.36","_npmUser":{"name":"jeffposnick","email":"jeffy@google.com"},"maintainers":[{"name":"jeffposnick","email":"jeffy@google.com"}],"dist":{"shasum":"8ad439f2788ed87012d26bbde85900b8c92840e0","tarball":"https://registry.npmjs.org/sw-precache/-/sw-precache-1.2.4.tgz"},"directories":{}},"1.2.5":{"name":"sw-precache","version":"1.2.5","description":"Generate service worker code that will precache specific resources.","author":{"name":"Jeff Posnick","email":"jeffy@google.com","url":"https://jeffy.info"},"homepage":"https://github.com/jeffposnick/sw-precache","main":"lib/sw-precache.js","keywords":["caching","offline","precaching","service-worker","serviceworker"],"engines":{"node":">=0.10.0"},"devDependencies":{"del":"^1.1.1","express":"^4.10.7","gulp":"^3.8.10","gulp-gh-pages":"^0.4.0","gulp-load-plugins":"^0.8.0","gulp-mocha":"^2.0.0","gulp-util":"^3.0.1","jade":"^1.8.2","mocha":"^2.1.0","run-sequence":"^1.0.2"},"dependencies":{"dom-urls":"^0.1.1","glob":"^4.3.2","lodash.defaults":"^3.0.0","lodash.template":"^3.0.0","pretty-bytes":"^1.0.2"},"repository":{"type":"git","url":"https://github.com/jeffposnick/sw-precache"},"bugs":{"url":"https://github.com/jeffposnick/sw-precache/issues"},"license":"Apache-2.0","scripts":{"test":"mocha"},"files":["lib","service-worker.tmpl"],"gitHead":"2e16cec3cc2797803ba839c536c72fb7330301b8","_id":"sw-precache@1.2.5","_shasum":"e9485a259735f3d0121378a41506dee2bdcd3cf6","_from":".","_npmVersion":"2.4.1","_nodeVersion":"0.10.36","_npmUser":{"name":"jeffposnick","email":"jeffy@google.com"},"maintainers":[{"name":"jeffposnick","email":"jeffy@google.com"}],"dist":{"shasum":"e9485a259735f3d0121378a41506dee2bdcd3cf6","tarball":"https://registry.npmjs.org/sw-precache/-/sw-precache-1.2.5.tgz"},"directories":{}},"1.2.6":{"name":"sw-precache","version":"1.2.6","description":"Generate service worker code that will precache specific resources.","author":{"name":"Jeff Posnick","email":"jeffy@google.com","url":"https://jeffy.info"},"homepage":"https://github.com/jeffposnick/sw-precache","main":"lib/sw-precache.js","keywords":["caching","offline","precaching","service-worker","serviceworker"],"engines":{"node":">=0.10.0"},"devDependencies":{"del":"^1.1.1","express":"^4.10.7","gh-pages":"^0.2.0","grunt":"^0.4.5","gulp":"^3.8.10","gulp-load-plugins":"^0.8.0","gulp-mocha":"^2.0.0","gulp-util":"^3.0.1","jade":"^1.8.2","mocha":"^2.1.0","run-sequence":"^1.0.2"},"dependencies":{"dom-urls":"^0.1.1","glob":"^4.3.2","lodash.defaults":"^3.0.0","lodash.template":"^3.0.0","pretty-bytes":"^1.0.2"},"repository":{"type":"git","url":"https://github.com/jeffposnick/sw-precache"},"bugs":{"url":"https://github.com/jeffposnick/sw-precache/issues"},"license":"Apache-2.0","scripts":{"test":"mocha"},"files":["lib","service-worker.tmpl"],"gitHead":"20506f8bfde5ad3debe95b12a6a9812b88a9d61f","_id":"sw-precache@1.2.6","_shasum":"e9d6786413c5137c43177863ea011c848a5d2834","_from":".","_npmVersion":"2.4.1","_nodeVersion":"0.10.36","_npmUser":{"name":"jeffposnick","email":"jeffy@google.com"},"maintainers":[{"name":"jeffposnick","email":"jeffy@google.com"}],"dist":{"shasum":"e9d6786413c5137c43177863ea011c848a5d2834","tarball":"https://registry.npmjs.org/sw-precache/-/sw-precache-1.2.6.tgz"},"directories":{}},"1.2.7":{"name":"sw-precache","version":"1.2.7","description":"Generate service worker code that will precache specific resources.","author":{"name":"Jeff Posnick","email":"jeffy@google.com","url":"https://jeffy.info"},"homepage":"https://github.com/googlechrome/sw-precache","main":"lib/sw-precache.js","keywords":["caching","offline","precaching","service-worker","serviceworker"],"engines":{"node":">=0.10.0"},"devDependencies":{"del":"^1.1.1","express":"^4.10.7","gh-pages":"^0.2.0","grunt":"^0.4.5","gulp":"^3.8.10","gulp-load-plugins":"^0.8.0","gulp-mocha":"^2.0.0","gulp-util":"^3.0.1","jade":"^1.8.2","mocha":"^2.1.0","run-sequence":"^1.0.2"},"dependencies":{"dom-urls":"^0.1.1","glob":"^4.3.2","lodash.defaults":"^3.0.0","lodash.template":"^3.0.0","pretty-bytes":"^1.0.2"},"repository":{"type":"git","url":"https://github.com/googlechrome/sw-precache"},"bugs":{"url":"https://github.com/googlechrome/sw-precache/issues"},"license":"Apache-2.0","scripts":{"test":"mocha"},"files":["lib","service-worker.tmpl"],"gitHead":"68696aab06f0cd9f4c1c3b33e7588cae7dfadb2a","_id":"sw-precache@1.2.7","_shasum":"03375cdc04bbd0a360a3b8cb650ab14b11c28d7e","_from":".","_npmVersion":"2.7.3","_nodeVersion":"0.12.1","_npmUser":{"name":"jeffposnick","email":"jeffy@google.com"},"maintainers":[{"name":"jeffposnick","email":"jeffy@google.com"}],"dist":{"shasum":"03375cdc04bbd0a360a3b8cb650ab14b11c28d7e","tarball":"https://registry.npmjs.org/sw-precache/-/sw-precache-1.2.7.tgz"},"directories":{}},"1.3.0":{"name":"sw-precache","version":"1.3.0","description":"Generate service worker code that will precache specific resources.","author":{"name":"Jeff Posnick","email":"jeffy@google.com","url":"https://jeffy.info"},"homepage":"https://github.com/googlechrome/sw-precache","main":"lib/sw-precache.js","keywords":["caching","offline","precaching","service-worker","serviceworker"],"engines":{"node":">=0.10.0"},"devDependencies":{"del":"^1.1.1","express":"^4.10.7","gh-pages":"^0.2.0","grunt":"^0.4.5","gulp":"^3.8.10","gulp-load-plugins":"^0.8.0","gulp-mocha":"^2.0.0","gulp-util":"^3.0.1","jade":"^1.8.2","mocha":"^2.1.0","run-sequence":"^1.0.2"},"dependencies":{"dom-urls":"^0.1.1","glob":"^4.3.2","lodash.defaults":"^3.0.0","lodash.template":"^3.0.0","pretty-bytes":"^1.0.2"},"repository":{"type":"git","url":"https://github.com/googlechrome/sw-precache"},"bugs":{"url":"https://github.com/googlechrome/sw-precache/issues"},"license":"Apache-2.0","scripts":{"test":"mocha"},"files":["lib","service-worker.tmpl"],"gitHead":"7e0f0501b51a7357630a2ad2591bf854e11f89ca","_id":"sw-precache@1.3.0","_shasum":"92f59dfdbd2349ec40f48705139238ba17b5e423","_from":".","_npmVersion":"2.7.3","_nodeVersion":"0.12.1","_npmUser":{"name":"jeffposnick","email":"jeffy@google.com"},"maintainers":[{"name":"jeffposnick","email":"jeffy@google.com"}],"dist":{"shasum":"92f59dfdbd2349ec40f48705139238ba17b5e423","tarball":"https://registry.npmjs.org/sw-precache/-/sw-precache-1.3.0.tgz"},"directories":{}},"1.3.1":{"name":"sw-precache","version":"1.3.1","description":"Generate service worker code that will precache specific resources.","author":{"name":"Jeff Posnick","email":"jeffy@google.com","url":"https://jeffy.info"},"homepage":"https://github.com/googlechrome/sw-precache","main":"lib/sw-precache.js","keywords":["caching","offline","precaching","service-worker","serviceworker"],"engines":{"node":">=0.10.0"},"devDependencies":{"del":"^1.1.1","express":"^4.10.7","gh-pages":"^0.2.0","grunt":"^0.4.5","gulp":"^3.8.10","gulp-load-plugins":"^0.8.0","gulp-mocha":"^2.0.0","gulp-util":"^3.0.1","jade":"^1.8.2","mocha":"^2.1.0","run-sequence":"^1.0.2"},"dependencies":{"dom-urls":"^0.1.1","glob":"^4.3.2","lodash.defaults":"^3.0.0","lodash.template":"^3.0.0","pretty-bytes":"^1.0.2"},"repository":{"type":"git","url":"https://github.com/googlechrome/sw-precache"},"bugs":{"url":"https://github.com/googlechrome/sw-precache/issues"},"license":"Apache-2.0","scripts":{"test":"mocha"},"files":["lib","service-worker.tmpl"],"gitHead":"26d732811c4b361a5e26784845b100063df412b7","_id":"sw-precache@1.3.1","_shasum":"50510675eaf1a9200dcb7cdacce9d5d7c0bb089e","_from":".","_npmVersion":"2.7.4","_nodeVersion":"0.12.1","_npmUser":{"name":"jeffposnick","email":"jeffy@google.com"},"dist":{"shasum":"50510675eaf1a9200dcb7cdacce9d5d7c0bb089e","tarball":"https://registry.npmjs.org/sw-precache/-/sw-precache-1.3.1.tgz"},"maintainers":[{"name":"jeffposnick","email":"jeffy@google.com"}],"directories":{}},"1.3.2":{"name":"sw-precache","version":"1.3.2","description":"Generate service worker code that will precache specific resources.","author":{"name":"Jeff Posnick","email":"jeffy@google.com","url":"https://jeffy.info"},"homepage":"https://github.com/googlechrome/sw-precache","main":"lib/sw-precache.js","keywords":["caching","offline","precaching","service-worker","serviceworker"],"engines":{"node":">=0.10.0"},"devDependencies":{"del":"^1.1.1","express":"^4.10.7","gh-pages":"^0.2.0","grunt":"^0.4.5","gulp":"^3.8.10","gulp-load-plugins":"^0.8.0","gulp-mocha":"^2.0.0","gulp-util":"^3.0.1","jade":"^1.8.2","mocha":"^2.1.0","run-sequence":"^1.0.2"},"dependencies":{"dom-urls":"^0.1.1","glob":"^4.3.2","lodash.defaults":"^3.0.0","lodash.template":"^3.0.0","pretty-bytes":"^1.0.2"},"repository":{"type":"git","url":"https://github.com/googlechrome/sw-precache"},"bugs":{"url":"https://github.com/googlechrome/sw-precache/issues"},"license":"Apache-2.0","scripts":{"test":"mocha"},"files":["lib","service-worker.tmpl"],"gitHead":"dcf6fce8966a5b4ba59a8d0b25d8c820da595e7a","_id":"sw-precache@1.3.2","_shasum":"7ee8d68fd4ea443902d2381ba4d4c42bfefab56b","_from":".","_npmVersion":"2.7.4","_nodeVersion":"0.12.1","_npmUser":{"name":"jeffposnick","email":"jeffy@google.com"},"dist":{"shasum":"7ee8d68fd4ea443902d2381ba4d4c42bfefab56b","tarball":"https://registry.npmjs.org/sw-precache/-/sw-precache-1.3.2.tgz"},"maintainers":[{"name":"jeffposnick","email":"jeffy@google.com"}],"directories":{}},"2.0.0":{"name":"sw-precache","version":"2.0.0","description":"Generate service worker code that will precache specific resources.","author":{"name":"Jeff Posnick","email":"jeffy@google.com","url":"https://jeffy.info"},"homepage":"https://github.com/googlechrome/sw-precache","main":"lib/sw-precache.js","keywords":["caching","offline","precaching","service-worker","serviceworker"],"engines":{"node":">=0.10.0"},"devDependencies":{"del":"^1.2.0","express":"^4.12.4","gh-pages":"^0.3.1","grunt":"^0.4.5","gulp":"^3.9.0","gulp-load-plugins":"^0.10.0","gulp-mocha":"^2.1.1","gulp-util":"^3.0.5","jade":"^1.11.0","mocha":"^2.2.5","run-sequence":"^1.1.0"},"dependencies":{"dom-urls":"^1.0.0","glob":"^5.0.10","lodash.defaults":"^3.1.1","lodash.template":"^3.6.1","pretty-bytes":"^2.0.1"},"repository":{"type":"git","url":"https://github.com/googlechrome/sw-precache"},"bugs":{"url":"https://github.com/googlechrome/sw-precache/issues"},"license":"Apache-2.0","scripts":{"test":"mocha"},"files":["lib","service-worker.tmpl"],"gitHead":"36635f147c821cf0ea2cacaeec8f1f8b6c5b2d83","_id":"sw-precache@2.0.0","_shasum":"8c2e587f3c19676b442ae2c8d95c0c4914b03838","_from":".","_npmVersion":"2.7.3","_nodeVersion":"0.12.1","_npmUser":{"name":"jeffposnick","email":"jeffy@google.com"},"maintainers":[{"name":"jeffposnick","email":"jeffy@google.com"}],"dist":{"shasum":"8c2e587f3c19676b442ae2c8d95c0c4914b03838","tarball":"https://registry.npmjs.org/sw-precache/-/sw-precache-2.0.0.tgz"},"directories":{}},"2.0.1":{"name":"sw-precache","version":"2.0.1","description":"Generate service worker code that will precache specific resources.","author":{"name":"Jeff Posnick","email":"jeffy@google.com","url":"https://jeffy.info"},"homepage":"https://github.com/googlechrome/sw-precache","main":"lib/sw-precache.js","keywords":["caching","offline","precaching","service-worker","serviceworker"],"engines":{"node":">=0.10.0"},"devDependencies":{"del":"^1.2.0","express":"^4.12.4","gh-pages":"^0.3.1","grunt":"^0.4.5","gulp":"^3.9.0","gulp-load-plugins":"^0.10.0","gulp-mocha":"^2.1.1","gulp-util":"^3.0.5","jade":"^1.11.0","mocha":"^2.2.5","run-sequence":"^1.1.0"},"dependencies":{"dom-urls":"^1.0.0","glob":"^5.0.10","lodash.defaults":"^3.1.1","lodash.template":"^3.6.1","meow":"^3.3.0","pretty-bytes":"^2.0.1"},"repository":{"type":"git","url":"git+https://github.com/googlechrome/sw-precache.git"},"bugs":{"url":"https://github.com/googlechrome/sw-precache/issues"},"license":"Apache-2.0","scripts":{"test":"mocha"},"files":["cli.js","lib","service-worker.tmpl"],"bin":{"sw-precache":"cli.js"},"gitHead":"828d2ad4be3bd292910e834530286a3de7f6569d","_id":"sw-precache@2.0.1","_shasum":"b97949a806a20c2e8a2568e824c4443950bd0057","_from":".","_npmVersion":"2.14.2","_nodeVersion":"0.12.7","_npmUser":{"name":"jeffposnick","email":"jeffy@google.com"},"maintainers":[{"name":"jeffposnick","email":"jeffy@google.com"}],"dist":{"shasum":"b97949a806a20c2e8a2568e824c4443950bd0057","tarball":"https://registry.npmjs.org/sw-precache/-/sw-precache-2.0.1.tgz"},"directories":{}},"2.1.0":{"name":"sw-precache","version":"2.1.0","description":"Generate service worker code that will precache specific resources.","author":{"name":"Jeff Posnick","email":"jeffy@google.com","url":"https://jeffy.info"},"homepage":"https://github.com/googlechrome/sw-precache","main":"lib/sw-precache.js","keywords":["caching","offline","precaching","service-worker","serviceworker"],"engines":{"node":">=0.10.0"},"devDependencies":{"del":"^1.2.0","eslint-config-xo":"^0.6.0","express":"^4.12.4","gh-pages":"^0.3.1","grunt":"^0.4.5","gulp":"^3.9.0","gulp-eslint":"^1.0.0","gulp-load-plugins":"^0.10.0","gulp-mocha":"^2.1.1","gulp-util":"^3.0.5","jade":"^1.11.0","mocha":"^2.2.5","run-sequence":"^1.1.0"},"dependencies":{"dom-urls":"^1.0.0","glob":"^5.0.10","lodash.defaults":"^3.1.1","lodash.template":"^3.6.1","meow":"^3.3.0","pretty-bytes":"^2.0.1"},"repository":{"type":"git","url":"git+https://github.com/googlechrome/sw-precache.git"},"bugs":{"url":"https://github.com/googlechrome/sw-precache/issues"},"license":"Apache-2.0","scripts":{"test":"gulp test lint"},"files":["cli.js","lib","service-worker.tmpl"],"bin":{"sw-precache":"cli.js"},"gitHead":"e728157cd362eadadd232d01e99013f5bba9ad4f","_id":"sw-precache@2.1.0","_shasum":"38c1c3c756692bc90447ab0e2f45303c20529fe1","_from":".","_npmVersion":"2.14.2","_nodeVersion":"0.12.7","_npmUser":{"name":"jeffposnick","email":"jeffy@google.com"},"maintainers":[{"name":"jeffposnick","email":"jeffy@google.com"}],"dist":{"shasum":"38c1c3c756692bc90447ab0e2f45303c20529fe1","tarball":"https://registry.npmjs.org/sw-precache/-/sw-precache-2.1.0.tgz"},"directories":{}},"2.2.0":{"name":"sw-precache","version":"2.2.0","description":"Generate service worker code that will precache specific resources.","author":{"name":"Jeff Posnick","email":"jeffy@google.com","url":"https://jeffy.info"},"homepage":"https://github.com/googlechrome/sw-precache","main":"lib/sw-precache.js","keywords":["caching","offline","precaching","service-worker","serviceworker"],"engines":{"node":">=0.10.0"},"devDependencies":{"del":"^1.2.0","eslint-config-xo":"^0.6.0","express":"^4.12.4","gh-pages":"^0.3.1","grunt":"^0.4.5","gulp":"^3.9.0","gulp-eslint":"^1.0.0","gulp-load-plugins":"^0.10.0","gulp-mocha":"^2.1.1","gulp-util":"^3.0.5","jade":"^1.11.0","mocha":"^2.2.5","run-sequence":"^1.1.0"},"dependencies":{"dom-urls":"^1.0.0","es6-promise":"^3.0.2","glob":"^5.0.10","lodash.defaults":"^3.1.1","lodash.template":"^3.6.1","meow":"^3.3.0","pretty-bytes":"^2.0.1"},"repository":{"type":"git","url":"git+https://github.com/googlechrome/sw-precache.git"},"bugs":{"url":"https://github.com/googlechrome/sw-precache/issues"},"license":"Apache-2.0","scripts":{"test":"gulp test lint"},"files":["cli.js","lib","service-worker.tmpl"],"bin":{"sw-precache":"cli.js"},"gitHead":"dc51295c669859e680735f5f1b42e940eda1639c","_id":"sw-precache@2.2.0","_shasum":"35dea8210fcd904ea5513067cb7c8e0621b5e42b","_from":".","_npmVersion":"2.14.3","_nodeVersion":"0.12.7","_npmUser":{"name":"jeffposnick","email":"jeffy@google.com"},"maintainers":[{"name":"jeffposnick","email":"jeffy@google.com"}],"dist":{"shasum":"35dea8210fcd904ea5513067cb7c8e0621b5e42b","tarball":"https://registry.npmjs.org/sw-precache/-/sw-precache-2.2.0.tgz"},"directories":{}},"2.3.0":{"name":"sw-precache","version":"2.3.0","description":"Generate service worker code that will precache specific resources.","author":{"name":"Jeff Posnick","email":"jeffy@google.com","url":"https://jeffy.info"},"homepage":"https://github.com/googlechrome/sw-precache","main":"lib/sw-precache.js","keywords":["caching","offline","precaching","service-worker","serviceworker"],"engines":{"node":">=0.10.0"},"devDependencies":{"del":"^1.2.0","eslint":"^1.10.3","eslint-config-google":"^0.3.0","express":"^4.12.4","gh-pages":"^0.3.1","grunt":"^0.4.5","gulp":"^3.9.0","gulp-eslint":"^1.0.0","gulp-load-plugins":"^0.10.0","gulp-mocha":"^2.1.1","gulp-util":"^3.0.5","jade":"^1.11.0","mocha":"^2.2.5","run-sequence":"^1.1.0"},"dependencies":{"dom-urls":"^1.0.0","es6-promise":"^3.0.2","glob":"^5.0.10","lodash.defaults":"^3.1.1","lodash.template":"^3.6.1","meow":"^3.3.0","mkdirp":"^0.5.1","pretty-bytes":"^2.0.1"},"repository":{"type":"git","url":"git+https://github.com/googlechrome/sw-precache.git"},"bugs":{"url":"https://github.com/googlechrome/sw-precache/issues"},"license":"Apache-2.0","scripts":{"test":"gulp test lint"},"files":["cli.js","lib","service-worker.tmpl"],"bin":{"sw-precache":"cli.js"},"gitHead":"91406425c3f80b867d90249688f4faea8f0c5898","_id":"sw-precache@2.3.0","_shasum":"253f9fbcc43d68614954e97a0d82846d556648fa","_from":".","_npmVersion":"3.3.12","_nodeVersion":"5.1.0","_npmUser":{"name":"jeffposnick","email":"jeffy@google.com"},"maintainers":[{"name":"jeffposnick","email":"jeffy@google.com"}],"dist":{"shasum":"253f9fbcc43d68614954e97a0d82846d556648fa","tarball":"https://registry.npmjs.org/sw-precache/-/sw-precache-2.3.0.tgz"},"directories":{}},"3.0.0":{"name":"sw-precache","version":"3.0.0","description":"Generate service worker code that will precache specific resources.","author":{"name":"Jeff Posnick","email":"jeffy@google.com","url":"https://jeffy.info"},"homepage":"https://github.com/googlechrome/sw-precache","main":"lib/sw-precache.js","keywords":["caching","offline","precaching","service-worker","serviceworker"],"engines":{"node":">=0.10.0"},"devDependencies":{"del":"^2.2.0","doctoc":"^1.0.0","eslint":"^1.10.3","eslint-config-google":"^0.3.0","express":"^4.12.4","gh-pages":"^0.9.0","grunt":"^0.4.5","gulp":"^3.9.0","gulp-eslint":"^1.0.0","gulp-load-plugins":"^1.2.0","gulp-mocha":"^2.1.1","gulp-util":"^3.0.5","jade":"^1.11.0","mocha":"^2.2.5","run-sequence":"^1.1.0"},"dependencies":{"dom-urls":"^1.0.0","es6-promise":"^3.0.2","glob":"^6.0.4","lodash.defaults":"^4.0.1","lodash.template":"^4.1.0","meow":"^3.3.0","mkdirp":"^0.5.1","pretty-bytes":"^3.0.1","sw-toolbox":"^3.1.1"},"repository":{"type":"git","url":"git+https://github.com/googlechrome/sw-precache.git"},"bugs":{"url":"https://github.com/googlechrome/sw-precache/issues"},"license":"Apache-2.0","scripts":{"test":"gulp test lint","doctoc":"doctoc"},"files":["cli.js","lib","service-worker.tmpl"],"bin":{"sw-precache":"cli.js"},"gitHead":"c0fe839876456b96fd5abb93e3457910654bec4a","_id":"sw-precache@3.0.0","_shasum":"68c3a1f79276592c6a2c89c5191d86bb88be7d43","_from":".","_npmVersion":"3.6.0","_nodeVersion":"5.5.0","_npmUser":{"name":"jeffposnick","email":"jeffy@google.com"},"dist":{"shasum":"68c3a1f79276592c6a2c89c5191d86bb88be7d43","tarball":"https://registry.npmjs.org/sw-precache/-/sw-precache-3.0.0.tgz"},"maintainers":[{"name":"jeffposnick","email":"jeffy@google.com"}],"_npmOperationalInternal":{"host":"packages-9-west.internal.npmjs.com","tmp":"tmp/sw-precache-3.0.0.tgz_1455064562213_0.7054934522602707"},"directories":{}},"3.1.0":{"name":"sw-precache","version":"3.1.0","description":"Generate service worker code that will precache specific resources.","author":{"name":"Jeff Posnick","email":"jeffy@google.com","url":"https://jeffy.info"},"homepage":"https://github.com/googlechrome/sw-precache","main":"lib/sw-precache.js","keywords":["caching","offline","precaching","service-worker","serviceworker"],"engines":{"node":">=0.10.0"},"devDependencies":{"del":"^2.2.0","eslint":"^1.10.3","eslint-config-google":"^0.3.0","express":"^4.12.4","gh-pages":"^0.9.0","grunt":"^0.4.5","gulp":"^3.9.0","gulp-doctoc":"^0.1.4","gulp-eslint":"^1.0.0","gulp-load-plugins":"^1.2.0","gulp-mocha":"^2.1.1","gulp-replace":"^0.5.4","gulp-util":"^3.0.5","jade":"^1.11.0","mocha":"^2.2.5","run-sequence":"^1.1.0"},"dependencies":{"dom-urls":"^1.0.0","es6-promise":"^3.0.2","glob":"^6.0.4","lodash.defaults":"^4.0.1","lodash.template":"^4.1.0","meow":"^3.3.0","mkdirp":"^0.5.1","pretty-bytes":"^3.0.1","sw-toolbox":"^3.1.1"},"repository":{"type":"git","url":"git+https://github.com/googlechrome/sw-precache.git"},"bugs":{"url":"https://github.com/googlechrome/sw-precache/issues"},"license":"Apache-2.0","scripts":{"test":"gulp test lint","doctoc":"doctoc"},"files":["cli.js","lib","service-worker.tmpl"],"bin":{"sw-precache":"cli.js"},"gitHead":"9ed047adbbae8f06f1261678515fabad1795e657","_id":"sw-precache@3.1.0","_shasum":"a53a95ab44dcf8cb249c455e9104b804d3ecf4c7","_from":".","_npmVersion":"3.6.0","_nodeVersion":"5.6.0","_npmUser":{"name":"jeffposnick","email":"jeffy@google.com"},"dist":{"shasum":"a53a95ab44dcf8cb249c455e9104b804d3ecf4c7","tarball":"https://registry.npmjs.org/sw-precache/-/sw-precache-3.1.0.tgz"},"maintainers":[{"name":"jeffposnick","email":"jeffy@google.com"}],"_npmOperationalInternal":{"host":"packages-6-west.internal.npmjs.com","tmp":"tmp/sw-precache-3.1.0.tgz_1455743886321_0.4004382195416838"},"directories":{}},"3.1.1":{"name":"sw-precache","version":"3.1.1","description":"Generate service worker code that will precache specific resources.","author":{"name":"Jeff Posnick","email":"jeffy@google.com","url":"https://jeffy.info"},"homepage":"https://github.com/googlechrome/sw-precache","main":"lib/sw-precache.js","keywords":["caching","offline","precaching","service-worker","serviceworker"],"engines":{"node":">=0.10.0"},"devDependencies":{"del":"^2.2.0","eslint":"^1.10.3","eslint-config-google":"^0.3.0","express":"^4.12.4","gh-pages":"^0.9.0","grunt":"^0.4.5","gulp":"^3.9.0","gulp-doctoc":"^0.1.4","gulp-eslint":"^1.0.0","gulp-load-plugins":"^1.2.0","gulp-mocha":"^2.1.1","gulp-replace":"^0.5.4","gulp-util":"^3.0.5","jade":"^1.11.0","mocha":"^2.2.5","run-sequence":"^1.1.0"},"dependencies":{"dom-urls":"^1.0.0","es6-promise":"^3.0.2","glob":"^6.0.4","lodash.defaults":"^4.0.1","lodash.template":"^4.1.0","meow":"^3.3.0","mkdirp":"^0.5.1","pretty-bytes":"^3.0.1","sw-toolbox":"^3.1.1"},"repository":{"type":"git","url":"git+https://github.com/googlechrome/sw-precache.git"},"bugs":{"url":"https://github.com/googlechrome/sw-precache/issues"},"license":"Apache-2.0","scripts":{"test":"gulp test lint","doctoc":"doctoc"},"files":["cli.js","lib","service-worker.tmpl"],"bin":{"sw-precache":"cli.js"},"gitHead":"ac7fb54fec61a7c20108a04770558389f0cceeee","_id":"sw-precache@3.1.1","_shasum":"3b74e56387e663b0a739619f67945aaff6438a62","_from":".","_npmVersion":"3.6.0","_nodeVersion":"5.7.1","_npmUser":{"name":"jeffposnick","email":"jeffy@google.com"},"dist":{"shasum":"3b74e56387e663b0a739619f67945aaff6438a62","tarball":"https://registry.npmjs.org/sw-precache/-/sw-precache-3.1.1.tgz"},"maintainers":[{"name":"jeffposnick","email":"jeffy@google.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/sw-precache-3.1.1.tgz_1458149141670_0.1928588510490954"},"directories":{}},"3.2.0":{"name":"sw-precache","version":"3.2.0","description":"Generates a service worker to cache your local App Shell resources.","author":{"name":"Jeff Posnick","email":"jeffy@google.com","url":"https://jeffy.info"},"homepage":"https://github.com/googlechrome/sw-precache","main":"lib/sw-precache.js","keywords":["caching","offline","precaching","service-worker","serviceworker","appshell","pwa"],"engines":{"node":">=0.10.0"},"devDependencies":{"del":"^2.2.0","eslint":"^1.10.3","eslint-config-google":"^0.3.0","express":"^4.12.4","gh-pages":"^0.9.0","grunt":"^0.4.5","gulp":"^3.9.0","gulp-doctoc":"^0.1.4","gulp-eslint":"^1.0.0","gulp-load-plugins":"^1.2.0","gulp-mocha":"^2.1.1","gulp-replace":"^0.5.4","gulp-util":"^3.0.5","jade":"^1.11.0","mocha":"^2.2.5","run-sequence":"^1.1.0"},"dependencies":{"dom-urls":"^1.0.0","es6-promise":"^3.0.2","glob":"^6.0.4","lodash.defaults":"^4.0.1","lodash.template":"^4.1.0","meow":"^3.3.0","mkdirp":"^0.5.1","pretty-bytes":"^3.0.1","sw-toolbox":"^3.1.1"},"repository":{"type":"git","url":"git+https://github.com/googlechrome/sw-precache.git"},"bugs":{"url":"https://github.com/googlechrome/sw-precache/issues"},"license":"Apache-2.0","scripts":{"test":"gulp test lint","doctoc":"doctoc"},"files":["cli.js","lib","service-worker.tmpl"],"bin":{"sw-precache":"cli.js"},"gitHead":"89d35a0fea6c404f2a81fb0f6b13c92fc76793d7","_id":"sw-precache@3.2.0","_shasum":"52f4077a6a160b4b50c23652a138124ca24e5477","_from":".","_npmVersion":"3.8.6","_nodeVersion":"5.11.1","_npmUser":{"name":"jeffposnick","email":"jeffy@google.com"},"dist":{"shasum":"52f4077a6a160b4b50c23652a138124ca24e5477","tarball":"https://registry.npmjs.org/sw-precache/-/sw-precache-3.2.0.tgz"},"maintainers":[{"name":"jeffposnick","email":"jeffy@google.com"}],"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/sw-precache-3.2.0.tgz_1464202748946_0.287719045067206"},"directories":{}}},"readme":"#  [![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url] [![Dependency Status][daviddm-url]][daviddm-image]\n\n# Service Worker Precache\n\n> Precache specific resources\n\nService Worker Precache is a module for generating a service worker that\nprecaches resources. The module is designed for use with\n[`gulp`](http://gulpjs.com/) or [`grunt`](http://gruntjs.com/) build scripts,\nthough it also provides a command-line interface. The module's API provides\nmethods for creating a service worker and saving the resulting code to a file.\nThe full documentation is in this README, and the\n[getting started guide](GettingStarted.md) provides a quicker jumping off point.\n\n\n# Table of Contents\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n\n\n- [Install](#install)\n- [Usage](#usage)\n  - [Overview](#overview)\n  - [Example](#example)\n  - [Considerations](#considerations)\n  - [Command-line interface](#command-line-interface)\n- [API](#api)\n  - [Methods](#methods)\n    - [generate(options, callback)](#generateoptions-callback)\n    - [write(filePath, options, callback)](#writefilepath-options-callback)\n  - [Options Parameter](#options-parameter)\n    - [cacheId [String]](#cacheid-string)\n    - [directoryIndex [String]](#directoryindex-string)\n    - [dynamicUrlToDependencies [Object&#x27e8;String,Array&#x27e8;String&#x27e9;&#x27e9;]](#dynamicurltodependencies-objectstringarraystring)\n    - [handleFetch [boolean]](#handlefetch-boolean)\n    - [ignoreUrlParametersMatching [Array&#x27e8;Regex&#x27e9;]](#ignoreurlparametersmatching-arrayregex)\n    - [importScripts [Array&#x27e8;String&#x27e9;]](#importscripts-arraystring)\n    - [logger [function]](#logger-function)\n    - [maximumFileSizeToCacheInBytes [Number]](#maximumfilesizetocacheinbytes-number)\n    - [navigateFallback [String]](#navigatefallback-string)\n    - [navigateFallbackWhitelist [Array&#x27e8;RegExp&#x27e9;]](#navigatefallbackwhitelist-arrayregexp)\n    - [replacePrefix [String]](#replaceprefix-string)\n    - [runtimeCaching [Array&#x27e8;Object&#x27e9;]](#runtimecaching-arrayobject)\n    - [staticFileGlobs [Array&#x27e8;String&#x27e9;]](#staticfileglobs-arraystring)\n    - [stripPrefix [String]](#stripprefix-string)\n    - [templateFilePath [String]](#templatefilepath-string)\n    - [verbose [boolean]](#verbose-boolean)\n- [Acknowledgements](#acknowledgements)\n- [License](#license)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n\n## Install\n\nLocal build integration:\n```sh\n$ npm install --save-dev sw-precache\n```\n\nGlobal command-line interface:\n```sh\n$ npm install --global sw-precache\n```\n\n\n## Usage\n\n### Overview\n\n1. **Make sure your site is served using HTTPS!**\nService worker functionality is only available on pages that are accessed via HTTPS.\n(`http://localhost` will also work, to facilitate testing.) The rationale for this restriction is\noutlined in the\n[\"Prefer Secure Origins For Powerful New Features\" document](http://www.chromium.org/Home/chromium-security/prefer-secure-origins-for-powerful-new-features).\n\n2. **Incorporate `sw-precache` into your `node`-based build script.** It should\nwork well with either `gulp` or `Grunt`, or other build scripts that run on\n`node`. In fact, we've provided examples of both in the `demo/` directory. Each\nbuild script in `demo` has a function called `writeServiceWorkerFile()` that\nshows how to use the API. Both scripts generate fully-functional JavaScript code\nthat takes care of precaching and fetching all the resources your site needs to\nfunction offline. There is also a [command-line interface](#command-line-interface)\navailable, for those using alternate build setups.\n\n3. **Register the service worker JavaScript.** The JavaScript that's generated\nneeds to be registered as the controlling service worker for your pages. This\ntechnically only needs to be done from within a top-level \"entry\" page for your\nsite, since the registration includes a [`scope`](https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-registration-scope)\nwhich will apply to all pages underneath your top-level page. [`service-worker-registration.js`](/demo/app/js/service-worker-registration.js) is a sample\nscript that illustrates the best practices for registering the generated service\nworker and handling the various [lifecycle](https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-state.1) events.\n\n### Example\n\nThe project's [sample `gulpfile.js`](/demo/gulpfile.js) illustrates the full use of sw-precache\nin context. (Note that the sample gulpfile.js is the one in the `demo` folder,\nnot the one in the root of the project.) You can run the sample by cloning this\nrepo, using [`npm install`](https://docs.npmjs.com/) to pull in the\ndependencies, changing to the `demo/` directory, running `` `npm bin`/gulp serve-dist ``, and\nthen visiting http://localhost:3000.\n\nThere's also a [sample `Gruntfile.js`](/demo/Gruntfile.js) that shows service worker generation in\nGrunt. Though, it doesn't run a server on localhost.\n\nHere's a simpler gulp example for a basic use case. It assumes your site's resources are located under\n`app` and that you'd like to cache *all* your JavaScript, HTML, CSS, and image files.\n\n    gulp.task('generate-service-worker', function(callback) {\n      var path = require('path');\n      var swPrecache = require('sw-precache');\n      var rootDir = 'app';\n\n      swPrecache.write(path.join(rootDir, 'service-worker.js'), {\n        staticFileGlobs: [rootDir + '/**/*.{js,html,css,png,jpg,gif,svg,eot,ttf,woff}'],\n        stripPrefix: rootDir\n      }, callback);\n    });\n\nThis task will create `app/service-worker.js`, which your client pages need to\n[register](https://slightlyoff.github.io/ServiceWorker/spec/service_worker/#navigator-service-worker-register) before it can take control of your site's\npages. [`service-worker-registration.js`](/demo/app/js/service-worker-registration.js) is a ready-to-\nuse script to handle registration.\n\n\n### Considerations\n\n- Service worker caching should be considered a progressive enhancement. If you follow the model of\nconditionally registering a service worker only if it's supported (determined by\n`if('serviceWorker' in navigator)`), you'll get offline support on browsers with service workers and\non browsers that don't support service workers, the offline-specific code will never be called.\nThere's no overhead/breakage for older browsers if you add `sw-precache` to your build.\n\n- **All** resources that are precached will be fetched by a service worker running in a separate\nthread as soon as the service worker is installed. You should be judicious in what you list in the\n`dynamicUrlToDependencies` and `staticFileGlobs` options, since listing files that are non-essential\n(large images that are not shown on every page, for instance) will result in browsers downloading\nmore data then is strictly necessary.\n\n- Precaching doesn't make sense for all types of resources (see the previous\npoint). Other caching strategies, like those outlined in the [Offline Cookbook](http://jakearchibald.com/2014/offline-cookbook/), can be used in\nconjunction with `sw-precache` to provide the best experience for your users. If\nyou do implement additional caching logic, put the code in a separate JavaScript\nfile and include it using the `importScripts()` method.\n\n- `sw-precache` uses a [cache-first](http://jakearchibald.com/2014/offline-cookbook/#cache-falling-back-to-network) strategy, which results in a copy of\nany cached content being returned without consulting the network. A useful\npattern to adopt with this strategy is to display a toast/alert to your users\nwhen there's new content available, and give them an opportunity to reload the\npage to pick up that new content (which the service worker will have added to\nthe cache, and will be available at the next page load). The sample service-\nworker-registration.js file [illustrates](https://github.com/GoogleChrome/sw-precache/blob/7688ee8ccdaddd9171af352384d04d16d712f9d3/demo/app/js/service-worker-registration.js#L51)\nthe service worker lifecycle event you can listen for to trigger this message.\n\n\n### Command-line interface\n\nFor those who would prefer not to use `sw-precache` as part of a `gulp` or\n`Grunt` build, there's a [command-line interface](cli.js) which supports the\n[options listed](#options-parameter) in the API, provided via flags.\n\n**Warning:** When using `sw-precache` \"by hand\", outside of an automated build process, it's your\nresponsibility to re-run the command each time there's a change to any local resources! If `sw-precache`\nis not run again, the previously cached local resources will be reused indefinitely.\n\nSensible defaults are assumed for options that are not provided. For example, if you are inside\nthe top-level directory that contains your site's contents, and you'd like to generate a\n`service-worker.js` file that will automatically precache all of the local files, you can simply run\n\n```sh\n$ sw-precache\n```\n\nAlternatively, if you'd like to only precache `.html` files that live within `dist/`, which is a\nsubdirectory of the current directory, you could run\n\n```sh\n$ sw-precache --root=dist --static-file-globs='dist/**/*.html'\n```\n \n**Note:** Be sure to use quotes around parameter values that have special meanings\nto your shell (such as the `*` characters in the sample command line above,\nfor example).\n\nFinally, there's support for storing a complex configuration in an external\nJSON file, using `--config <file>`. Any of the options from the file can be\noverridden via a command-line flag. For example,\n\n```sh\n$ sw-precache --config=path/to/sw-precache-config.json --verbose --no-handle-fetch\n```\n\nwill generate a service worker file using the options provided in the\n`path/to/sw-precache-config.json` file, but with the `verbose` option set to\n`true` and the `handleFetch` option set to `false`.\n\n`sw-precache-config.json` might look like:\n\n```json\n{\n  \"staticFileGlobs\": [\n    \"app/css/**.css\",\n    \"app/**.html\",\n    \"app/images/**.*\",\n    \"app/js/**.js\"\n  ],\n  \"stripPrefix\": \"app/\"\n}\n```\n\n## API\n\n### Methods\n\nThe `sw-precache` module exposes two methods: `generate` and `write`.\n\n#### generate(options, callback) \n\n`generate` takes in [options](#options), generates a service worker \nfrom them and passes the result to a callback function, which must \nhave the following interface:\n\n`callback(error, serviceWorkerString)`\n\nIn the 1.x releases of `sw-precache`, this was the default and only method\nexposed by the module.\n\nSince 2.2.0, `generate()` also returns a\n[`Promise`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise).\n\n#### write(filePath, options, callback) \n`write` takes in [options](#options), generates a service worker from them, \nand writes the service worker to a specified file. This method always \ninvokes `callback(error)`. If no error was found, the `error` parameter will \nbe `null'\n\nSince 2.2.0, `write()` also returns a [`Promise`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise).\n\n### Options Parameter\n\nBoth the `generate()` and `write()` methods take the same options.\n\n#### cacheId [String]\nA string used to distinguish the caches created by different web applications that are served off\nof the same origin and path. While serving completely different sites from the same URL is not\nlikely to be an issue in a production environment, it avoids cache-conflicts when testing various\nprojects all served off of `http://localhost`. You may want to set it to, e.g., the `name`\nproperty from your `package.json`.\n\n_Default_: `''`\n\n#### directoryIndex [String] \nSets a default filename to return for URL's formatted like directory paths (in \nother words, those ending in `'/'`). `sw-precache` will take that translation \ninto account and serve the contents a relative `directoryIndex` file when \nthere's no other match for a URL ending in `'/'`. To turn off this behavior, \nset `directoryIndex` to `false` or `null`. To override this behavior for one \nor more URLs, use the `dynamicUrlToDependencies` option to explicitly set up \nmappings between a directory URL and a corresponding file.\n\n_Default_: `'index.html'`\n\n#### dynamicUrlToDependencies [Object&#x27e8;String,Array&#x27e8;String&#x27e9;&#x27e9;]  \nMaps a dynamic URL string to an array of all the files that URL's contents\ndepend on. E.g., if the contents of `/pages/home` are generated server-side via\nthe templates `layout.jade` and `home.jade`, then specify `'/pages/home':\n['layout.jade', 'home.jade']`. The MD5 hash is used to determine whether\n`/pages/home` has changed will depend on the hashes of both `layout.jade` and\n`home.jade`.\n\n_Default_: `{}`\n\n#### handleFetch [boolean] \nDetermines whether the `fetch` event handler is included in the generated \nservice worker code. It is useful to set this to `false` in development builds, \nto ensure that features like live reload still work. Otherwise, the content \nwould always be served from the service worker cache.\n\n_Default_: `true`\n\n#### ignoreUrlParametersMatching [Array&#x27e8;Regex&#x27e9;]\n`sw-precache` finds matching cache entries by doing a comparison with the full request URL. It's\ncommon for sites to support URL query parameters that don't affect the site's content and should\nbe effectively ignored for the purposes of cache matching. One example is the\n[`utm_`-prefixed](https://support.google.com/analytics/answer/1033867) parameters used for tracking\ncampaign performance. By default, `sw-precache` will ignore `key=value` when `key` matches _any_ of\nthe regular expressions provided in this option.\nTo ignore all parameters, use `[/./]`. To take all parameters into account when matching, use `[]`.\n\n_Default_: `[/^utm_/]`\n\n#### importScripts [Array&#x27e8;String&#x27e9;] \nWrites calls to [`importScripts()`]\n(https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/basic_usage#Importing_scripts_and_libraries) \nto the resulting service worker to import the specified scripts.\n\n_Default_: `[]`\n\n#### logger [function] \n\nSpecifies a callback function for logging which resources are being precached and\na precache size. Use `function() {}` if you'd prefer that nothing is logged.\nWithin a `gulp` script, it's recommended that you use [`gulp-util`](https://github.com/gulpjs/gulp-util) and pass in `gutil.log`.\n\n_Default_: `console.log`\n\n#### maximumFileSizeToCacheInBytes [Number]\nSets the maximum allowed size for a file in the precache list.\n\n_Default_: `2097152` (2 megabytes)\n\n#### navigateFallback [String] \nSets an HTML document to use as a fallback for URLs not found in the cache. To\nbe effective, this fallback URL should be already cached via `staticFileGlobs`\nor `dynamicUrlToDependencies`.\n\nThis comes in handy when used with a web application that performs client-side URL routing\nusing the [History API](https://developer.mozilla.org/en-US/docs/Web/API/History). It allows any\narbitrary URL that the client generates to map to a fallback cached HTML entry. This fallback entry\nideally should serve as an \"application shell\" that is able to load the appropriate resources\nclient-side, based on the request URL.\n\n**Note:** The current implementation searches the request's `accept` header and\ntriggers the fallback when `'text/html'` is found. It does this whether or not\nthe request is a navigation.\n\n_Default_: `''`\n\n#### navigateFallbackWhitelist [Array&#x27e8;RegExp&#x27e9;] \nWorks to limit the effect of `navigateFallback`, so that the fallback only\napplies to requests for URLs with paths that match at least one\n[`RegExp`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp).\n\nThis option is useful if you want to fallback to the cached App Shell for\ncertain specific subsections of your site, but not have that behavior apply\nto all of your site's URLs.\n\nFor example, if you would like to have `navigateFallback` only apply to\nnavigation requests to URLs whose path begins with `/guide/`\n(e.g. `https://example.com/guide/1234`), the following configuration could be\nused:\n\n```js\nnavigateFallback: '/shell',\nnavigateFallbackWhitelist: [/^\\/guide\\//]\n```\n\nIf set to `[]` (the default), the whitelist will be effectively bypassed, and\n`navigateFallback` will apply to all navigation requests, regardless of URL.\n\n_Default_: `[]`\n\n#### replacePrefix [String]\nReplaces a specified string at the beginning of path URL's at runtime. Use this\noption when you are serving static files from a different directory at runtime\nthan you are at build time. For example, if your local files are under\n`dist/app/` but your static asset root is at `/public/`, you'd strip 'dist/app/'\nand replace it with '/public/'.\n\n_Default_: `''`\n\n#### runtimeCaching [Array&#x27e8;Object&#x27e9;]\nConfigures runtime caching for dynamic content. If you use this option, the `sw-toolbox`\nlibrary configured with the caching strategies you specify will automatically be included in\nyour generated service worker file.\n\nEach `Object` in the `Array` needs a `urlPattern`, which is either a\n[`RegExp`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp)\nor a string, following the conventions of the `sw-toolbox` library's\n[routing configuration](https://googlechrome.github.io/sw-toolbox/docs/master/tutorial-usage.html). Also required is\na `handler`, which should be either a string corresponding to one of the\n[built-in handlers](https://googlechrome.github.io/sw-toolbox/docs/master/tutorial-api.html) under the `toolbox.` namespace, or a function corresponding to your custom\n[request handler](https://googlechrome.github.io/sw-toolbox/docs/master/tutorial-usage). There is also\nsupport for `options`, which corresponds to the same options supported by a\n[`sw-toolbox` handler](https://googlechrome.github.io/sw-toolbox/docs/master/tutorial-api.html).\n\nFor example, the following defines runtime caching behavior for two different URL patterns. It uses a\ndifferent handler for each, and specifies a dedicated cache with maximum size for requests\nthat match `/articles/`:\n\n```js\nruntimeCaching: [{\n  urlPattern: /^https:\\/\\/example\\.com\\/api/,\n  handler: 'networkFirst'\n}, {\n  urlPattern: /\\/articles\\//,\n  handler: 'fastest',\n  options: {\n    cache: {\n      maxEntries: 10,\n      name: 'articles-cache'\n    }\n  }\n}]\n```\n\n_Default_: `[]`\n\n#### staticFileGlobs [Array&#x27e8;String&#x27e9;]\nAn array of one or more string patterns that will be passed in to\n[`glob`](https://github.com/isaacs/node-glob).\nAll files matching these globs will be automatically precached by the generated service worker.\nYou'll almost always want to specify something for this.\n\n_Default_: `[]`\n\n#### stripPrefix [String] \nRemoves a specified string from the beginning of path URL's at runtime. Use this\noption when there's a discrepancy between a relative path at build time and\nthe same path at run time. For example, if all your local files are under\n`dist/app/` and your web root is also at `dist/app/`, you'd strip that prefix\nfrom the start of each local file's path in order to get the correct relative\nURL.\n\n_Default_: `''`\n\n#### templateFilePath [String]\n\nThe path to the  ([lo-dash](https://lodash.com/docs#template)) template used to\ngenerate `service-worker.js`. If you need to add additional functionality to the\ngenerated service worker code, it's recommended that you use the\n[`importScripts`](#importscripts) option to include extra JavaScript rather than\nusing a different template. But if you do need to change the basic generated\nservice worker code, please make a copy of the [original template](https://github.com/googlechrome/sw-precache/blob/master/service-worker.tmpl),\nmodify it locally, and use this option to point to your template file.\n\n_Default_: `service-worker.tmpl` (in the directory that this module lives in)\n\n#### verbose [boolean]\nDetermines whether there's log output for each individual static/dynamic resource that's precached.\nEven if this is set to false, there will be a final log entry indicating the total size of all\nprecached resources.\n\n_Default_: `false`\n\n\n## Acknowledgements\n\nThanks to [Sindre Sorhus](https://github.com/sindresorhus) and\n[Addy Osmani](https://github.com/addyosmani) for their advice and code reviews.\n[Jake Archibald](https://github.com/jakearchibald) was kind enough to review the service worker logic.\n\n\n## License\n\n[Apache 2.0](https://github.com/googlechrome/sw-precache/blob/master/LICENSE) © 2015 Google Inc.\n\nCopyright 2015 Google, Inc.\n\nLicensed under the [Apache License, Version 2.0](LICENSE) (the \"License\"); \nyou may not use this file except in compliance with the License. You may \nobtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n[npm-url]: https://npmjs.org/package/sw-precache\n[npm-image]: https://badge.fury.io/js/sw-precache.svg\n[travis-url]: https://travis-ci.org/GoogleChrome/sw-precache\n[travis-image]: https://travis-ci.org/GoogleChrome/sw-precache.svg?branch=master\n[daviddm-url]: https://david-dm.org/googlechrome/sw-precache.svg?theme=shields.io\n[daviddm-image]: https://david-dm.org/googlechrome/sw-precache\n","maintainers":[{"name":"jeffposnick","email":"jeffy@google.com"}],"time":{"modified":"2016-05-25T18:59:10.462Z","created":"2015-01-20T22:11:09.769Z","1.0.0":"2015-01-20T22:11:09.769Z","1.1.0":"2015-01-22T21:23:17.936Z","1.1.1":"2015-01-22T21:42:13.916Z","1.1.2":"2015-01-23T20:51:26.095Z","1.2.0":"2015-01-26T02:27:03.742Z","1.2.1":"2015-01-26T21:41:13.844Z","1.2.2":"2015-01-29T16:20:11.244Z","1.2.3":"2015-01-30T05:05:47.837Z","1.2.4":"2015-02-06T17:19:14.461Z","1.2.5":"2015-02-09T16:07:45.258Z","1.2.6":"2015-03-09T20:18:41.308Z","1.2.7":"2015-03-31T20:29:19.019Z","1.3.0":"2015-04-06T17:26:33.844Z","1.3.1":"2015-05-11T02:57:57.796Z","1.3.2":"2015-05-11T03:02:44.777Z","2.0.0":"2015-06-17T15:23:14.522Z","2.0.1":"2015-09-10T20:24:54.846Z","2.1.0":"2015-09-16T18:58:13.868Z","2.2.0":"2015-10-08T14:35:00.778Z","2.3.0":"2015-12-14T15:52:20.654Z","3.0.0":"2016-02-10T00:36:05.481Z","3.1.0":"2016-02-17T21:18:10.451Z","3.1.1":"2016-03-16T17:25:44.388Z","3.2.0":"2016-05-25T18:59:10.462Z"},"homepage":"https://github.com/googlechrome/sw-precache","keywords":["caching","offline","precaching","service-worker","serviceworker","appshell","pwa"],"repository":{"type":"git","url":"git+https://github.com/googlechrome/sw-precache.git"},"author":{"name":"Jeff Posnick","email":"jeffy@google.com","url":"https://jeffy.info"},"bugs":{"url":"https://github.com/googlechrome/sw-precache/issues"},"license":"Apache-2.0","readmeFilename":"README.md","users":{"jerkovicl":true,"stevenjoe":true,"xiaochao":true},"_attachments":{},"_etag":"\"92UQ5QO915KRA5IIT2RZX8T67\"","_cached":true}